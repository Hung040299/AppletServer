{
  "name": "river_applet_server",
  "version": "0.0.1",
  "private": true,
  "description": "Prototype Applet Store Server of Project -ER",
  "keywords": [],
  "author": "",
  "license": "",
  "main": "app.js",
  "dependencies": {
    "@oclif/command": "^1.8.0",
    "@types/express": "^4.17.0",
    "@types/image-size": "^0.7.0",
    "@types/mocha": "^5.2.6",
    "@types/mysql2": "github:types/mysql2",
    "ER_Proto_Block_Server": "/home/hung/Desktop/Riiver/river_block_server",
    "apn": "github:node-apn/node-apn#38a357ed0c153aad09c2857e48a710527e685bfc",
    "aws-sdk": "^2.939.0",
    "dd-trace": "^0.20.3",
    "escape-string-regexp": "^2.0.0",
    "express": "^4.12.3",
    "firebase-admin": "^9.1.1",
    "googleapis": "^59.0.0",
    "image-size": "^0.7.4",
    "jimp": "^0.16.1",
    "log4js": "^6.3.0",
    "moment": "^2.29.1",
    "swagger-express-mw": "^0.1.0",
    "user-session": "/home/hung/Desktop/Riiver/user-session"
  },
  "devDependencies": {
    "@types/node": "^11.13.7",
    "@types/pngjs": "^3.3.2",
    "@types/power-assert": "^1.5.0",
    "@types/puppeteer": "^1.12.3",
    "@types/request": "^2.48.1",
    "@types/request-promise": "^4.1.43",
    "@types/should": "^13.0.0",
    "@types/sinon": "^7.5.2",
    "@types/supertest": "^2.0.7",
    "@types/swagger-express-mw": "^0.7.7",
    "bootprint": "^1.0.2",
    "bootprint-openapi": "^1.1.0",
    "eslint": "^4.17.0",
    "flow-bin": "^0.95.1",
    "flowtype": "^2.0.0",
    "html-inline": "^1.2.0",
    "power-assert": "^1.6.1",
    "prettier": "^1.17.0",
    "puppeteer": "^1.14.0",
    "request": "^2.88.0",
    "request-promise": "^4.2.2",
    "should": "^7.1.0",
    "sinon": "^9.0.1",
    "supertest": "^1.0.0",
    "swagger": "^0.7.5",
    "swagger-editor": "^3.2.8",
    "ts-node": "^8.1.0",
    "tslint": "^5.16.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-plugin-prettier": "^2.0.1",
    "typescript": "^3.4.4",
    "watch": "^1.0.2"
  },
  "bundledDependencies": [
    "ER_Proto_Block_Server"
  ],
  "scripts": {
    "swagger:edit": "swagger project edit",
    "swagger:html": "mkdir -p docs; bootprint openapi api/swagger/swagger.yaml temp && html-inline -i temp/index.html -o docs/index.html && rm -rf temp",
    "mock": "swagger project start --mock",
    "start": "bash ./assets/workaround.sh && npx tsc --project ./ && node -r ts-node/register app.js",
    "start:debug": "npx tsc --project ./ && DEBUG='swagger-tools*' node -r ts-node/register app.js",
    "start:test": "npx tsc --project ./ && DEBUG='*' node -r ts-node/register app.js",
    "test": "NODE_ENV=test swagger project test",
    "test:with_dodai": "NODE_ENV=development swagger project test",
    "test:watch": "watch 'NODE_ENV=test swagger project test' --interval=1 --wait=5 --ignoreDotFiles",
    "test:config": "cp config/development_dev_applet_local.yaml config/development.yaml",
    "test:prod_api": "test -n $DISPLAY && cp config/production.yaml config/test.yaml && npx tsc --project ./  && touch auth.txt && MODE=prod npx ts-node -e 'require(\"./test/utility/cookie_getter\").main()' ; NODE_ENV=test MODE=prod npx mocha --timeout 1000000  --require ts-node/register $(ls test/api/controllers/*.ts | grep -v admin)",
    "test:api": "test -n $DISPLAY && npx tsc --project ./  && cd node_modules/ER_Proto_Block_Server && (PORT=10011 npm start 2> /dev/null &) && cd - && touch auth.txt && npx ts-node -e 'require(\"./test/utility/cookie_getter\").main()' ; TS_NODE_FILES=\"true\" NODE_ENV=test npx mocha --timeout 1000000  --require ts-node/register ./test/api/controllers/assetsImageResizeTool.ts && pkill -9 block_ser",
    "test:push": "TS_NODE_FILES=\"true\" npx mocha --timeout 1000000  --require ts-node/register ./test/api/controllers/push_test.ts",
    "cookie": "touch auth.txt && npx ts-node -e 'require(\"./test/utility/cookie_getter\").main()'"
  }
}
